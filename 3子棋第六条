#define hang 3
#define lie 3
#include<stdio.h>
#include<stdlib.h>
#include<time.h>


void menu()
{
	printf("*************************\n");
	printf("*** 1.play*** 0.quit ****\n");
	printf("*************************\n");

}

void cshboard(char board[hang][lie])
{
	int i = 0,
		j = 0;
	for (i = 0; i < hang; i++)
	{
		for (j = 0; j < lie; j++)
		{
			board[i][j] = ' ';
		}
	}
}
void dyboard(char board[hang][lie])
{
	int a = 0, b = 0;
	for (a = 0; a < hang; a++)
	{
		for (b = 0; b < lie; b++)
		{
			printf(" %c ", board[a][b]);
			if(b<lie-1)
			printf("|");
			
		}
		printf("\n");
		if (a < hang - 1)
		{
			for (b = 0; b < lie; b++)
			{
				printf("---");
				if (b < lie - 1)
				printf("|");
			}
		}
		printf("\n");
	}
}
void commove(char board[hang][lie])
{
	int x = 0,
		y = 0;
	while (1)
	{
		x = rand() % hang;
		y = rand() % lie;
		if (board[x][y] == ' ')
		{
			board[x][y] = '#';
			dyboard(board);
			break;
		}
	}
}
void playermove(char board[hang][lie])
{
	int x, y;
	
	while (1)
	{
		scanf("%d%d", &x, &y);
		if ((x <=hang ) && (x > 0) && (y <= hang) && (y > 0))
		{
			if (board[x - 1][y - 1] == ' ')
			{
				board[x - 1][y - 1] = '*';
				dyboard(board);
				break;
			}
			else
			{
				printf("已被占用，请重新选择\n");
			}

		}
		else
		{
			printf("输入错误，请重新输入\n");
		}
	}
}
int iffull(char board[hang][lie])
{
	int i = 0,
		j = 0;
	for (i = 0; i < hang; i++)
	{
		for (j = 0; j < lie; j++)
		{
			if (board[i][j] == ' ')
				return 1;
		}
	}
	return 0;

}
char whowin(char board[hang][lie])
{
	int a=0,
		b=0;
	for (a = 0; a < hang; a++)
	{
		if (board[a][0] == board[a][1] && board[a][1] == board[a][2]&&board[a][0] != ' ')
		{
			return board[a][0];
		}
	}
	for (b = 0; b < lie; b++)
	{
		if (board[0][b] == board[1][b]&& board[1][b] == board[2][b]&&board[0][b] != ' ')
		{
			return board[0][b];
		}
	}
	if (board[0][0] == board[1][1] && board[1][1]== board[2][2] && board[0][0] != ' ') 
	{
		return board[1][1];
	}
	if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[0][0] != ' ')
	{
		return board[1][1];
	}
	if (1 == iffull(board))
	{
		return 'j';
	}
	else
		return 'p';

	
}

void game()
{
	char ret;
	char board[hang][lie] = {0};
	cshboard(board);
	dyboard(board);
	while (1)
	{
		printf("玩家走\n");
		playermove(board);
		ret=whowin(board);
		if (ret != 'j')
		{
			break;
		}
		printf("电脑走\n");
		commove(board);
		ret = whowin(board);
		if (ret != 'j')
		{
			break;
		}

	}
	if (ret == '*')
	{
		printf("玩家赢\n");
	}
	if (ret == '#')
	{
		printf("电脑赢\n");
	}
	if (ret == 'p')
	{
		printf("平局\n");
	}

}

int main()
{
	int input = 0;
	srand((unsigned int)time(NULL));
	do
	{
		menu();
		printf("请选择>:");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			break;
		default:
			break;
		}

	} while (input);


	return 0;
}
